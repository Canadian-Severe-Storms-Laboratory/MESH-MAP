import os
import numpy as np
import cv2
from PIL import Image
from glob import glob
from tqdm import tqdm

colour_table = np.array([[255, 255, 255], [255, 204, 153], [255, 153, 0], [102, 255, 0], [102, 255, 0], [0, 204, 0], [0, 204, 0], [0, 153, 0], [0, 153, 0], [0, 102, 0], [0, 102, 0], [51, 255, 255], [51, 255, 255], [51, 255, 255], [51, 255, 255], [51, 255, 255], [0, 204, 255], [0, 204, 255], [0, 204, 255], [0, 204, 255], [0, 204, 255], [0, 153, 255], [0, 153, 255], [0, 153, 255], [0, 153, 255], [0, 153, 255], [0, 153, 255], [0, 153, 255], [0, 153, 255], [0, 153, 255], [0, 153, 255], [0, 102, 255], [0, 102, 255], [0, 102, 255], [0, 102, 255], [0, 102, 255], [0, 102, 255], [0, 102, 255], [0, 102, 255], [0, 102, 255], [0, 102, 255], [0, 0, 255], [0, 0, 255], [0, 0, 255], [0, 0, 255], [0, 0, 255], [0, 0, 255], [0, 0, 255], [0, 0, 255], [0, 0, 255], [0, 0, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [153, 2, 255], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [204, 51, 153], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [153, 0, 102], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100], [100, 100, 100]]
                        , np.uint8)


def colour_swath(img):
    if not isinstance(img, np.ndarray) or img.dtype != np.uint8 or len(img.shape) != 2:
        raise TypeError('image must be single chanel np.uint8')

    return colour_table[img]


if __name__ == '__main__':

    files = glob('simple_images/*.tif')

    for f in tqdm(files):
        name = os.path.basename(f).split(".")[0]
        img = np.array(Image.open(f), np.uint8)

        #img = colour_swath(img)

        cv2.imwrite("simple_images/" + name + ".png", img)
